{"remainingRequest":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\WebProject\\contractmanager\\client\\src\\components\\mainFrame.vue?vue&type=template&id=83fd2558&scoped=true&","dependencies":[{"path":"D:\\Code\\WebProject\\contractmanager\\client\\src\\components\\mainFrame.vue","mtime":1685549273151},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685549481424},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1685549483049},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685549481424},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1685549482668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}