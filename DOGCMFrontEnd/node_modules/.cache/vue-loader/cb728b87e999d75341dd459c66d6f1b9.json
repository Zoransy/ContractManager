{"remainingRequest":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\WebProject\\contractmanager\\client\\src\\components\\draft.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Code\\WebProject\\contractmanager\\client\\src\\components\\draft.vue","mtime":1685549273151},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685549481424},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1685549482541},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685549481424},{"path":"D:\\Code\\WebProject\\contractmanager\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1685549482668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["draft.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"draft.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n            起草合同\r\n        </div>\r\n\r\n        <div>\r\n            <el-form ref=\"draftForm\" :model=\"draftForm\" :rules=\"rule\" label-position=\"left\" label-width=\"85px\">\r\n                <el-form-item label=\"合同名称:\" prop=\"name\">\r\n                    <el-input v-model=\"draftForm.name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"客户:\" prop=\"userName\">\r\n                    <el-select v-model=\"draftForm.userName\" clearable placeholder=\"请选择\">\r\n                        <el-option\r\n                                v-for=\"item in options\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n<!--                    <el-input style=\"width: 70%\" v-model=\"draftForm.userName\"></el-input>-->\r\n                    <el-button @click=\"dialogVisible=true\">添加客户</el-button>\r\n                </el-form-item>\r\n                <el-form-item label=\"活动时间\" prop=\"date\">\r\n                    <el-date-picker\r\n                            v-model=\"draftForm.date\"\r\n                            type=\"daterange\"\r\n                            align=\"right\"\r\n                            unlink-panels\r\n                            range-separator=\"至\"\r\n                            value-format=\"yyyy-MM-dd\"\r\n                            start-placeholder=\"开始日期\"\r\n                            end-placeholder=\"结束日期\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"合同内容\" prop=\"info\">\r\n                    <el-input type=\"textarea\" :autosize=\"{minRows:3, maxRows:6}\" v-model=\"draftForm.info\"></el-input>\r\n                </el-form-item>\r\n\r\n\r\n                <el-form-item>\r\n                    <el-row>\r\n                        <el-col :span=\"15\">\r\n                            <el-button type=\"primary\" @click=\"postContract\">确定</el-button>\r\n                        </el-col>\r\n\r\n                        <el-col :span=\"9\">\r\n                            <el-button type=\"danger\" @click=\"resetContract\">重置</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </div>\r\n\r\n        <el-dialog @close=\"closeDlg\" center width=\"35%\" title=\"添加客户\" :visible.sync=\"dialogVisible\">\r\n            <add-customer></add-customer>\r\n        </el-dialog>\r\n\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n    import AddCustomer from \"@/components/addCustomer\";\r\n    export default {\r\n        name: \"draft\",\r\n        components: {AddCustomer},\r\n        data() {\r\n\r\n            const generateOpt = () => {\r\n                const data = [];\r\n\r\n                this.$axios({\r\n                    url: this.$url + \"/customer/selectAllCustomer\",\r\n                    method: 'post',\r\n                    data: {\r\n                        token: this.$store.state.token,\r\n                    },\r\n                    transformRequest: [function (data) {\r\n                        let ret = '';\r\n                        for (let it in data) {\r\n                            ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n                        }\r\n                        return ret\r\n                    }],\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n                }).then(res => {\r\n\r\n                    res.data.customers.forEach((item, index) => {\r\n                        data.push({\r\n                            value: item.id,\r\n                            label: item.name,\r\n                            index: index\r\n                        });\r\n                    })\r\n\r\n                });\r\n\r\n                return data;\r\n            };\r\n\r\n\r\n            return {\r\n\r\n                dialogVisible: false,\r\n\r\n                draftForm: {\r\n                    name: '',\r\n                    userName: '',\r\n                    date: '',\r\n                    info: '',\r\n                },\r\n\r\n                nullContract: {\r\n                    name: '',\r\n                    userName: '',\r\n                    date: '',\r\n                    info: '',\r\n                },\r\n\r\n                options: generateOpt(),\r\n                value: '',\r\n\r\n                customerValue: '',\r\n\r\n                rule: {\r\n                    name: {\r\n                        required: true, message: '请输入合同名称', trigger: 'blur'\r\n                    },\r\n\r\n                    userName: {\r\n                        required: true, message: '请输入客户姓名', trigger: 'blur'\r\n                    },\r\n                    date: {\r\n                        required: true, message: '请选择时间', trigger: 'blur'\r\n                    },\r\n                    info: {\r\n                        required: true, message: '请输入合同内容', trigger: 'blur'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            resetContract() {\r\n                this.$confirm(\"此操作将清空该合同，是否继续？\", \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\"\r\n                }).then(() => {\r\n                    this.draftForm = this.cleanJson(this.draftForm);\r\n                    this.$notify({\r\n                        title: '成功',\r\n                        message: '清空成功！',\r\n                        type: \"success\"\r\n                    })\r\n                })\r\n            },\r\n\r\n\r\n            closeDlg() {\r\n                const generateOpt = () => {\r\n                    const data = [];\r\n\r\n                    this.$axios({\r\n                        url: this.$url + \"/customer/selectAllCustomer\",\r\n                        method: 'post',\r\n                        data: {\r\n                            token: this.$store.state.token,\r\n                        },\r\n                        transformRequest: [function (data) {\r\n                            let ret = '';\r\n                            for (let it in data) {\r\n                                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n                            }\r\n                            return ret\r\n                        }],\r\n                        headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n                    }).then(res => {\r\n\r\n                        res.data.customers.forEach((item, index) => {\r\n                            data.push({\r\n                                value: item.id,\r\n                                label: item.name,\r\n                                index: index\r\n                            });\r\n                        })\r\n\r\n                    });\r\n\r\n                    return data;\r\n                };\r\n\r\n                this.options =  generateOpt();\r\n            },\r\n\r\n            postContract() {\r\n\r\n                this.$refs[\"draftForm\"].validate((valid) => {\r\n                    if (valid) {\r\n\r\n                        // eslint-disable-next-line no-console\r\n                        console.log(this.draftForm);\r\n                        this.$axios({\r\n                            url:this.$url + \"/contract/addContract\",\r\n                            method: 'post',\r\n                            data: {\r\n                                token: this.$store.state.token,\r\n                                contract_name: this.draftForm.name,\r\n                                customer_id: this.draftForm.userName,\r\n                                dateFrom: this.draftForm.date[0],\r\n                                dateTo: this.draftForm.date[1],\r\n                                content: this.draftForm.info\r\n                            },\r\n                            transformRequest: [function (data) {\r\n                                let ret = '';\r\n                                for (let it in data) {\r\n                                    ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n                                }\r\n                                return ret\r\n                            }],\r\n                            headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n                        }).then(res => {\r\n\r\n                            if (res.data.state === 0) {\r\n                                this.$notify({\r\n                                    title: '成功',\r\n                                    message: '成功添加合同！',\r\n                                    type: \"success\"\r\n                                })\r\n\r\n                                this.draftForm = this.cleanJson(this.draftForm)\r\n                            }\r\n                            if (res.data.state === -1) {\r\n                                this.$notify({\r\n                                    title: '失败',\r\n                                    message: '添加合同失败！',\r\n                                    type: \"error\"\r\n                                })\r\n                            }\r\n                            // eslint-disable-next-line no-console\r\n                            console.log(res);\r\n                        })\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: '提交失败！',\r\n                            type: \"error\"\r\n                        })\r\n                    }\r\n                })\r\n\r\n\r\n            },\r\n\r\n            cleanJson(json) {\r\n                for (let draftFormKey in json) {\r\n                    json[draftFormKey] = ''\r\n                }\r\n                return json;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n    .clearfix:before,\r\n    .clearfix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .clearfix:after {\r\n        clear: both\r\n    }\r\n\r\n    .box-card {\r\n        width: 50%;\r\n        left: 20%;\r\n        top: 15%;\r\n        position: relative;\r\n    }\r\n\r\n\r\n</style>\r\n<style>\r\n    .el-menu--horizontal .el-menu-item:not(.is-disabled):focus {\r\n        color: #ffffff;\r\n    }\r\n\r\n    .el-menu--horizontal>.el-submenu.is-active .el-submenu__title {\r\n        color: #ffffff;\r\n    }\r\n\r\n    .el-menu--horizontal .el-menu .el-menu-item.is-active, .el-menu--horizontal .el-menu .el-submenu.is-active>.el-submenu__title {\r\n        color: #FFFFFF;\r\n    }\r\n</style>\r\n"]}]}